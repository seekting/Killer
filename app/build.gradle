import java.nio.channels.FileChannel

apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion project.compileSdkVersion as int
    defaultConfig {
        applicationId "com.seekting.killer"
        minSdkVersion project.minSdkVersion as int
        targetSdkVersion project.targetSdkVersion as int
        versionCode project.versionCode as int
        versionName project.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        dataBinding {
            enabled true
        }
        multiDexEnabled true
    }
    signingConfigs {

        release {
            keyAlias 'seekting'
            keyPassword 'zxt_yhy'
            storeFile file('key/key.jks')
            storePassword 'zxt_yhy'
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [
                    providerSuffix: '',
                    //这里也是在AndroidManifest.xml中配置的app图标，同样在这里写了了不同的资源文件，从而实现了动态配置
                    app_icon      : "@mipmap/daokong",

            ]
        }
        debug {
            applicationIdSuffix '.debug'
            minifyEnabled false
            shrinkResources false
            manifestPlaceholders = [
                    providerSuffix: '.debug',
                    //这里也是在AndroidManifest.xml中配置的app图标，同样在这里写了了不同的资源文件，从而实现了动态配置
                    app_icon      : "@mipmap/ic_launcher",

            ]
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

def fileChannelCopy(s, t) {
    FileInputStream fi = null;
    FileOutputStream fo = null;
    try {
        fi = new FileInputStream(s);
        fo = new FileOutputStream(t);
        FileChannel input = fi.getChannel();//得到对应的文件通道
        FileChannel out = fo.getChannel();//得到对应的文件通道
        input.transferTo(0, input.size(), out);//连接两个通道，并且从in通道读取，然后写入out通道
    } catch (IOException e) {
        e.printStackTrace();
    } finally {
        try {
            if (fo != null) fo.close();
            if (fi != null) fi.close();
        } catch (IOException e) {
            e.printStackTrace();
        }

    }
}

afterEvaluate {
    Task task = tasks.findByName("assembleRelease")
    if (task != null) {
        task.doLast {
            logger.quiet('quiet 日志')
            logger.error('error 日志')
            logger.warn('warn 日志')
//            logger.lifecycle('lifecycle 日志')
//            logger.info('info 日志')
//            logger.debug('debug 日志')
//            logger.info("last!")
            File release = new File("release");
            release.mkdirs()

            File file = new File('app/build/outputs/apk/release/app-release.apk')
//            File file = file('build/outputs/apk/release/output.json')

            File newFile = new File("release/v${versionName}-app-release.apk")
            fileChannelCopy(file, newFile)

            println(file.absolutePath)
        }
    }

}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    api project(":model")
    api project(":android-common")
    api project(":thirdparty-pack")
    implementation 'com.wonderkiln:camerakit:0.13.5'
    implementation  'com.umeng.umsdk:analytics:8.0.0'
    implementation  'com.umeng.umsdk:common:2.0.0'
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test:runner:$androidx_test_runner_version"
    androidTestImplementation "androidx.test.ext:junit:$androidx_test_ext_junit_version"
    androidTestImplementation "androidx.test:rules:$androidx_test_rules_version"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$androidx_test_espresso_espresso_intents_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidx_test_espresso_espresso_core_version"
}

