apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
android {
    compileSdkVersion project.compileSdkVersion as int



    defaultConfig {
        minSdkVersion project.minSdkVersion as int
        targetSdkVersion project.targetSdkVersion as int
        versionCode project.versionCode as int
        versionName project.versionName

         testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])


    api "com.google.code.gson:gson:$gson_version"
    api "org.greenrobot:eventbus:$eventbus_version"
    api("com.github.bumptech.glide:glide:$glide_version") {
//        exclude group: 'com.android.support', module: 'support-fragment'
        exclude group: 'com.android.support'
    }
    api 'com.wang.avi:library:2.1.3'


    api 'com.android.support:multidex:1.0.1'
//    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
//    implementation 'com.android.support:appcompat-v7:28.0.0'
    // https://mvnrepository.com/artifact/androidx.appcompat/appcompat


    api "com.google.android.material:material:$support_version"
    api "androidx.appcompat:appcompat:$support_version"
    api "androidx.legacy:legacy-support-v4:$support_version"
    api "androidx.recyclerview:recyclerview:$support_version"



    api "androidx.constraintlayout:constraintlayout:$constraint_version"





    def lifecycle_version = "2.0.0"
    api "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
//    // alternatively - just ViewModel
    api "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
    // For Kotlin use lifecycle-viewmodel-ktx
//    // alternatively - just LiveData
    api "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"
//    // alternatively - Lifecycles only (no ViewModel or LiveData). Some UI
//    //     AndroidX libraries use this lightweight import for Lifecycle
    api "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"
//
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    // For Kotlin use kapt instead of annotationProcessor
//    // alternately - if using Java8, use the following instead of lifecycle-compiler
    api "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
//
//    // optional - ReactiveStreams support for LiveData
    api "androidx.lifecycle:lifecycle-reactivestreams:$lifecycle_version"
    // For Kotlin use lifecycle-reactivestreams-ktx

    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test:runner:$androidx_test_runner_version"
    androidTestImplementation "androidx.test.ext:junit:$androidx_test_ext_junit_version"
    androidTestImplementation "androidx.test:rules:$androidx_test_rules_version"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$androidx_test_espresso_espresso_intents_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidx_test_espresso_espresso_core_version"
}
